---
import type { CollectionEntry } from "astro:content";
import { escape } from "@/utils/content";
interface Props {
  post: CollectionEntry<"blog">["data"];
}

const { post } = Astro.props;
---

<style>
  p {
    margin: initial;
  }
  a + a {
    margin-left: 4px;
  }
  details {
    background-color: var(--bg-1);
    padding: var(--block-padding);
    border-radius: var(--block-border-radius);
    margin: 10px auto;
  }
</style>

<details open>
  <summary>Details</summary>
  <p>
    Edit on
    <a
      href={`https://github.com/kulupu-lapo/poki/blob/main/plaintext/${Astro.url.pathname
        .split("/")
        .filter((x) => x)
        .join("/")}.md?plain=1`}>Github</a
    >
  </p>
  {post.description && <p>Description: {post.description}</p>}
  {post.proofreaders && <p>Proofreaders: {post.proofreaders.join(", ")}</p>}
  {
    post.tags && (
      <p>
        Tags:{" "}
        {post.tags.map((tag) => (
          <a href={`./t/${escape(tag)}`}>{tag}</a>
        ))}
      </p>
    )
  }
  {post.license && <p>License: {post.license}</p>}

  {
    post.sources && (
      <p>
        <span>Sources:</span>
        {post.sources.map((source, i) => (
          <a href={source}>{source.split("/")[2] ?? i + 1}</a>
        ))}
      </p>
    )
  }
  {
    post.archives && (
      <p>
        <span>Archives:</span>
        {post.archives.map((archive, i) => (
          <a href={archive}>{archive.split("/")[2] ?? i + 1} </a>
        ))}
      </p>
    )
  }
  {
    post.original && post.original.title !== null &&  (
      <p>
        <span>Original:</span>
        <a href={`./o/${escape(post.original.title)}`}>{post.original.title}</a>
        {
          post.original.authors && (
            <span>
              by {post.original.authors.reduce((prev, curr, i) => (
                <>
                  {prev}, {curr}
                </>
              ))}
            </span>
          )
        }
      </p>
    ) 
  }
  {
    (post.preprocessing || post["accessibility-notes"] || post.notes) && (
      <p>
        <span>Notes:</span>
        {post.preprocessing && <span>{post.preprocessing}</span>}
        {post["accessibility-notes"] && (
          <span>{post["accessibility-notes"]}</span>
        )}
        {post.notes && <span>{post.notes}</span>}
      </p>
    )
  }
</details>
