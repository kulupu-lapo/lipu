---
import { getLangFromUrl, locales, languages, defaultLang } from "@/utils/i18n";
import MarkdownSnippet from "@/components/MarkdownSnippet.astro";

const urlPrefix = Astro.url.pathname.split('/')[1]
var path : string, currentLocale : string;
if ((locales as string[]).includes(urlPrefix)) {
    path = Astro.url.pathname.slice(("/"+urlPrefix+"/").length);
    currentLocale = urlPrefix;
} else {
    path = Astro.url.pathname;
    currentLocale = defaultLang;
}
---
<style>
  footer {
    max-width: 850px;
    text-align: center;
    border-top: 5px dotted var(--accent);
    padding: 20px 0;
    margin: auto;
    margin-bottom: 2rem;
    color: var(--grey);
  }
  a {
    display: inline-block;
    text-decoration: auto;
    font-weight: initial;
  }
</style>
<footer>
  <MarkdownSnippet lang={getLangFromUrl(Astro.url)} filename='footer' />
  {locales.map(langcode => 
    langcode === currentLocale 
    ? (<span>{languages[langcode]}</span>) 
    : (<a href={langcode + "/" + path}>{languages[langcode]}</a>)
  ).reduce((a,b) => (<>{a} Â· {b}</>))}
</footer>
